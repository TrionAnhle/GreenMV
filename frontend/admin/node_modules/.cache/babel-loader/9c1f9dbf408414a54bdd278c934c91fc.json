{"ast":null,"code":"var _jsxFileName = \"P:\\\\Thuc-tap\\\\GreenMovie-V3.0\\\\frontend\\\\admin\\\\src\\\\containers\\\\Sessions\\\\Session.js\",\n    _s = $RefreshSig$();\n\nimport { Panel } from 'primereact/panel';\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from '../utils/request';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toDateTimeString } from \"../utils/date\";\nimport { numberFormat } from \"../utils/number\";\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { confirmDialog } from 'primereact/confirmdialog';\nimport { Dialog } from 'primereact/dialog';\nimport { useFormik } from 'formik';\nimport { Dropdown } from 'primereact/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Session() {\n  _s();\n\n  const toast = useRef(null);\n  const [data, setData] = useState({});\n  const [listCategories, setListCategories] = useState([]);\n  const [selectedList, setSelectedList] = useState({});\n  const [displayModal, setDisplayModal] = useState(false);\n  const [isInsert, setIsInsert] = useState(true);\n  const [checked, setChecked] = useState(false);\n  const listStatus = [{\n    id: 0,\n    name: \"Tất cả\"\n  }, {\n    id: 1,\n    name: \"Chưa chiếu\"\n  }];\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  const setSelectedRowCustomize = e => {\n    setSelectedList(e.value);\n  };\n\n  const reloadData = status => {\n    let urlAPI = status == 0 ? '/api/admin/session' : '/api/admin/session/available';\n    API.get(urlAPI, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      setData(res.data.data);\n      console.log(res.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    setSelectedList({});\n  };\n\n  const deleteItem = () => {// API.post('/api/admin/movie/delete', [selectedList.id], \n    // {\n    //     headers: {\n    //         'Authorization': `Bearer ${localStorage.getItem('token')}`\n    // }})\n    //     .then((res) =>{\n    //         if(res.data.ok){\n    //             toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\n    //         }else{\n    //             toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\n    //         }\n    //         reloadData();\n    //     })\n    //     .catch((error)=>{\n    //         console.log(error);\n    //         toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\n    // });\n  };\n\n  const rejectFunc = () => {};\n\n  const confirm = () => {\n    if (selectedList.id == null) {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Thông báo',\n        detail: 'Bạn chưa chọn dòng cần xoá.',\n        life: 3000\n      });\n    } else confirmDialog({\n      message: 'Bạn có muốn xoá - Phim: ' + selectedList.name + ' ? ',\n      header: 'Thông báo',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => deleteItem(),\n      reject: () => rejectFunc()\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      id: '',\n      name: '',\n      description: '',\n      pathVideo: '',\n      screenTime: 0,\n      isShowing: true,\n      categoryId: '',\n      pathThumbnail: '',\n      base64: ''\n    },\n    validate: data => {\n      const errors = {};\n\n      if (!data.name) {\n        errors.name = 'Tên phim không được để trống.';\n      }\n\n      if (isInsert && !data.base64) {\n        errors.pathThumbnail = 'Ảnh chưa được upload.';\n      }\n\n      if (!data.categoryId) {\n        errors.categoryId = 'Loại phim không được thiếu.';\n      }\n\n      return errors;\n    },\n    onSubmit: data => {\n      console.log(data);\n      data.isShowing = checked; // API.post('/api/admin/movie', data, \n      // {\n      //     headers: {\n      //         'Authorization': `Bearer ${localStorage.getItem('token')}`\n      // }})\n      //     .then((res) =>{\n      //         if(res.data.ok){\n      //             toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\n      //             reloadData();\n      //             setDisplayModal(false);\n      //         }else{\n      //             toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\n      //         }\n      //     })\n      //     .catch((error)=>{\n      //         console.log(error);\n      //         toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\n      // });\n    }\n  });\n\n  const footer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: isInsert ? 'Thêm' : 'Cập nhật',\n      icon: \"pi pi-check\",\n      onClick: formik.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Hu\\u1EF7\",\n      icon: \"pi pi-times\",\n      onClick: () => setDisplayModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n\n  const create = () => {\n    setDisplayModal(true);\n    setIsInsert(true);\n    formik.setFieldValue('id', '');\n    formik.setFieldValue('name', '');\n    formik.setFieldValue('description', '');\n    formik.setFieldValue('pathVideo', '');\n    formik.setFieldValue('screenTime', 1);\n    setChecked(false);\n    formik.setFieldValue('categoryId', '');\n    formik.setFieldValue('pathThumbnail', '');\n    formik.setFieldValue('base64', '');\n  };\n\n  const update = () => {\n    if (selectedList.id == null) {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Thông báo',\n        detail: 'Bạn chưa chọn dòng cần cập nhật.',\n        life: 3000\n      });\n    } else {\n      setDisplayModal(true);\n      setIsInsert(false);\n      formik.resetForm();\n      API.get('/api/admin/movie/' + selectedList.id, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        formik.setFieldValue('id', res.data.data[0].id);\n        formik.setFieldValue('name', res.data.data[0].name);\n        formik.setFieldValue('description', res.data.data[0].description);\n        formik.setFieldValue('pathVideo', res.data.data[0].pathVideo);\n        formik.setFieldValue('screenTime', res.data.data[0].screenTime);\n        setChecked(res.data.data[0].isShowing);\n        formik.setFieldValue('categoryId', res.data.data[0].category[0].id);\n      }).catch(error => {\n        console.log(error);\n      });\n      formik.setFieldValue('pathThumbnail', '');\n      formik.setFieldValue('base64', '');\n    }\n  };\n\n  const toBookedTicket = rowData => {\n    return rowData.numberBooked + '/' + rowData.cinema.numberSeats;\n  };\n\n  const toDateOfWeek = rowData => {\n    const birthday = new Date(rowData.showTime);\n    const day = birthday.getDay();\n    return day === 0 ? 'Chủ nhật' : 'Thứ ' + (day + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    header: \"Danh s\\xE1ch c\\xE1c su\\u1EA5t chi\\u1EBFu\",\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Th\\xEAm\",\n          icon: \"pi pi-plus\",\n          className: \"p-button-success\",\n          onClick: create\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"S\\u1EEDa\",\n          icon: \"pi pi-pencil\",\n          className: \"p-button-info\",\n          onClick: update\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Xo\\xE1\",\n          icon: \"pi pi-times\",\n          className: \"p-button-danger\",\n          onClick: confirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        id: \"status\",\n        name: \"status\",\n        placeholder: 'Trạng thái',\n        options: listStatus,\n        optionLabel: \"name\",\n        optionValue: \"id\",\n        onChange: e => {\n          reloadData(e.value);\n        },\n        className: \"p-inputtext-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        header: isInsert ? 'Thêm mới' : 'Cập nhật',\n        maximizable: true,\n        onHide: () => setDisplayModal(false),\n        visible: displayModal,\n        footer: footer,\n        breakpoints: {\n          '960px': '75vw',\n          '640px': '100vw'\n        },\n        style: {\n          width: '50vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datatable-templating-demo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          value: data,\n          paginator: true,\n          rows: 3,\n          scrollable: true,\n          scrollHeight: \"500px\",\n          selection: selectedList,\n          onSelectionChange: setSelectedRowCustomize,\n          selectionMode: \"single\",\n          dataKey: \"id\",\n          stateStorage: \"local\",\n          stateKey: \"dt-state-demo-local\",\n          emptyMessage: \"Kh\\xF4ng c\\xF3 su\\u1EA5t chi\\u1EBFu n\\xE0o\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"cinema.name\",\n            header: \"R\\u1EA1p s\\u1ED1\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"movie.name\",\n            header: \"T\\xEAn phim\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"movie.screenTime\",\n            header: \"Th\\u1EDDi l\\u01B0\\u1EE3ng phim\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            header: \"Th\\u1EE9\",\n            body: rowData => toDateOfWeek(rowData),\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"showTime\",\n            header: \"Gi\\u1EDD b\\u1EAFt \\u0111\\u1EA7u\",\n            body: rowData => toDateTimeString(rowData.showTime),\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"finishTime\",\n            header: \"Gi\\u1EDD k\\u1EBFt th\\xFAc\",\n            body: rowData => toDateTimeString(rowData.finishTime),\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            header: \"S\\u1ED1 v\\xE9 b\\xE1n\",\n            body: rowData => toBookedTicket(rowData),\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Session, \"zyKtDw0/HXTajntMl3myeG7+nAg=\", false, function () {\n  return [useFormik];\n});\n\n_c = Session;\nexport default Session;\n\nvar _c;\n\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"sources":["P:/Thuc-tap/GreenMovie-V3.0/frontend/admin/src/containers/Sessions/Session.js"],"names":["Panel","React","useState","useEffect","useRef","API","DataTable","Column","toDateTimeString","numberFormat","Button","Toast","confirmDialog","Dialog","useFormik","Dropdown","Session","toast","data","setData","listCategories","setListCategories","selectedList","setSelectedList","displayModal","setDisplayModal","isInsert","setIsInsert","checked","setChecked","listStatus","id","name","reloadData","setSelectedRowCustomize","e","value","status","urlAPI","get","headers","localStorage","getItem","then","res","console","log","catch","error","deleteItem","rejectFunc","confirm","current","show","severity","summary","detail","life","message","header","icon","accept","reject","formik","initialValues","description","pathVideo","screenTime","isShowing","categoryId","pathThumbnail","base64","validate","errors","onSubmit","footer","handleSubmit","create","setFieldValue","update","resetForm","category","toBookedTicket","rowData","numberBooked","cinema","numberSeats","toDateOfWeek","birthday","Date","showTime","day","getDay","width","finishTime"],"mappings":"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","sourcesContent":["import { Panel } from 'primereact/panel';\r\nimport React, { useState,useEffect,useRef } from 'react';\r\nimport API from '../utils/request'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toDateTimeString } from \"../utils/date\";\r\nimport { numberFormat } from \"../utils/number\";\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { useFormik } from 'formik';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\n\r\nfunction Session() {\r\n    const toast = useRef(null);\r\n    const [data, setData] = useState({});\r\n    const [listCategories, setListCategories] = useState([]);\r\n    const [selectedList, setSelectedList] = useState({});\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [isInsert, setIsInsert] = useState(true);\r\n    const [checked, setChecked] = useState(false);\r\n    const listStatus = [\r\n        {id : 0, name : \"Tất cả\"},\r\n        {id : 1, name : \"Chưa chiếu\"}\r\n    ]\r\n\r\n    useEffect(() => {\r\n        reloadData();\r\n    }, [])\r\n\r\n    const setSelectedRowCustomize = (e) => {\r\n        setSelectedList(e.value);\r\n    };\r\n    \r\n    \r\n\r\n    const reloadData =  (status) =>{\r\n        let urlAPI = (status == 0 ? '/api/admin/session' : '/api/admin/session/available');\r\n\r\n        API.get(urlAPI, \r\n        {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }})\r\n            .then((res) =>{\r\n                setData(res.data.data);\r\n                console.log(res.data.data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n        });\r\n        setSelectedList({});\r\n    }\r\n    \r\n    const deleteItem = () => {\r\n        // API.post('/api/admin/movie/delete', [selectedList.id], \r\n        // {\r\n        //     headers: {\r\n        //         'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        // }})\r\n        //     .then((res) =>{\r\n        //         if(res.data.ok){\r\n        //             toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n        //         }else{\r\n        //             toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n        //         }\r\n        //         reloadData();\r\n        //     })\r\n        //     .catch((error)=>{\r\n        //         console.log(error);\r\n        //         toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\r\n        // });\r\n    }\r\n    const rejectFunc = () =>{\r\n\r\n    }\r\n\r\n    const confirm = () => {\r\n        if(selectedList.id == null){\r\n            toast.current.show({severity:'warn', summary: 'Thông báo', detail: 'Bạn chưa chọn dòng cần xoá.', life: 3000});\r\n        }else\r\n            confirmDialog({\r\n                message: 'Bạn có muốn xoá - Phim: '+selectedList.name+' ? ',\r\n                header: 'Thông báo',\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => deleteItem(),\r\n                reject: () => rejectFunc()\r\n            });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: '',\r\n            name: '',\r\n            description: '',\r\n            pathVideo: '',\r\n            screenTime: 0,\r\n            isShowing: true,\r\n            categoryId: '',\r\n            pathThumbnail : '',\r\n            base64: ''\r\n        },\r\n        validate: (data) => {\r\n            const errors = {};\r\n            if (!data.name) {\r\n                errors.name = 'Tên phim không được để trống.';\r\n            }\r\n            if(isInsert && !data.base64){\r\n                errors.pathThumbnail = 'Ảnh chưa được upload.';\r\n            }\r\n            if (!data.categoryId) {\r\n                errors.categoryId = 'Loại phim không được thiếu.';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            data.isShowing = checked;\r\n            // API.post('/api/admin/movie', data, \r\n            // {\r\n            //     headers: {\r\n            //         'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            // }})\r\n            //     .then((res) =>{\r\n            //         if(res.data.ok){\r\n            //             toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n            //             reloadData();\r\n            //             setDisplayModal(false);\r\n            //         }else{\r\n            //             toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n            //         }\r\n                    \r\n            //     })\r\n            //     .catch((error)=>{\r\n            //         console.log(error);\r\n            //         toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\r\n            // });\r\n        }\r\n    });\r\n\r\n    const footer = (\r\n        <div>\r\n            <Button label={isInsert ? 'Thêm': 'Cập nhật'} icon=\"pi pi-check\" onClick={formik.handleSubmit}/>\r\n            <Button label=\"Huỷ\" icon=\"pi pi-times\" onClick={() =>setDisplayModal(false)}/>\r\n        </div>\r\n    );\r\n\r\n    const create = () =>{\r\n        setDisplayModal(true);\r\n        setIsInsert(true);\r\n        formik.setFieldValue('id' , '');\r\n        formik.setFieldValue('name' , '');\r\n        formik.setFieldValue('description' , '');\r\n        formik.setFieldValue('pathVideo' , '');\r\n        formik.setFieldValue('screenTime' , 1);\r\n        setChecked(false);\r\n        formik.setFieldValue('categoryId' , '');\r\n\r\n        formik.setFieldValue('pathThumbnail' , '');\r\n        formik.setFieldValue('base64' , '');\r\n        \r\n    };\r\n\r\n    const update = () =>{\r\n        if(selectedList.id == null){\r\n            toast.current.show({severity:'warn', summary: 'Thông báo', detail: 'Bạn chưa chọn dòng cần cập nhật.', life: 3000});\r\n        }else{\r\n            setDisplayModal(true);\r\n            setIsInsert(false);\r\n            formik.resetForm();\r\n\r\n            API.get('/api/admin/movie/'+selectedList.id, \r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }})\r\n                .then((res) =>{\r\n                    console.log(res.data.data);\r\n                    formik.setFieldValue('id' , res.data.data[0].id);\r\n                    formik.setFieldValue('name' , res.data.data[0].name);\r\n                    formik.setFieldValue('description' , res.data.data[0].description);\r\n                    formik.setFieldValue('pathVideo' , res.data.data[0].pathVideo);\r\n                    formik.setFieldValue('screenTime' , res.data.data[0].screenTime);\r\n                    setChecked(res.data.data[0].isShowing);\r\n                    formik.setFieldValue('categoryId' , res.data.data[0].category[0].id);\r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n            });\r\n\r\n            formik.setFieldValue('pathThumbnail' , '');\r\n            formik.setFieldValue('base64' , '');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n\r\n    const toBookedTicket = (rowData) =>{\r\n        return rowData.numberBooked +'/'+rowData.cinema.numberSeats;\r\n    }\r\n\r\n    const toDateOfWeek = (rowData) => {\r\n        const birthday = new Date(rowData.showTime);\r\n        const day = birthday.getDay();\r\n        return (day === 0 ? 'Chủ nhật' : 'Thứ '+(day+1));\r\n    }\r\n\r\n    return (\r\n        <Panel header=\"Danh sách các suất chiếu\">\r\n            <Toast ref={toast} />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Thêm\" icon=\"pi pi-plus\" className=\"p-button-success\" onClick={create}/>\r\n                </div>\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Sửa\" icon=\"pi pi-pencil\" className=\"p-button-info\" onClick={update}/>\r\n                </div>\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Xoá\" icon=\"pi pi-times\" className=\"p-button-danger\" onClick={confirm}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-mb-5\">\r\n                <Dropdown\r\n                    id=\"status\"\r\n                    name=\"status\"\r\n                    placeholder={'Trạng thái'}\r\n                    options={listStatus}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                    onChange={(e) => {\r\n                        reloadData(e.value);\r\n                    }}\r\n                    className=\"p-inputtext-sm\"\r\n                />\r\n            </div>\r\n            <div className=\"p-grid\">\r\n                <Dialog header={isInsert ? 'Thêm mới' : 'Cập nhật'} maximizable onHide={() => setDisplayModal(false)} visible={displayModal} footer={footer}  breakpoints={{'960px': '75vw', '640px': '100vw'}} style={{width: '50vw'}}>\r\n                    <form onSubmit={formik.handleSubmit} className=\"p-fluid\">\r\n                        <div className=\"p-grid\">\r\n                            \r\n                            \r\n                              \r\n                        </div>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n            <div className=\"datatable-templating-demo\">\r\n                <div className=\"card\">\r\n                    <DataTable value={data} paginator rows={3} scrollable scrollHeight=\"500px\"\r\n                        selection={selectedList} \r\n                        onSelectionChange={setSelectedRowCustomize} \r\n                        selectionMode=\"single\" \r\n                        dataKey=\"id\"\r\n                        stateStorage=\"local\" \r\n                        stateKey=\"dt-state-demo-local\"\r\n                        emptyMessage=\"Không có suất chiếu nào\">\r\n                        \r\n                        <Column field=\"cinema.name\" header=\"Rạp số\" sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column field=\"movie.name\" header=\"Tên phim\" sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column field=\"movie.screenTime\" header=\"Thời lượng phim\" sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column header=\"Thứ\"  body={(rowData) => toDateOfWeek(rowData)} sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column field=\"showTime\" header=\"Giờ bắt đầu\" body={(rowData) => toDateTimeString(rowData.showTime)} sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column field=\"finishTime\" header=\"Giờ kết thúc\" body={(rowData) => toDateTimeString(rowData.finishTime)} sortable filter filterPlaceholder=\"Search...\"></Column>\r\n                        <Column header=\"Số vé bán\" body={(rowData) => toBookedTicket(rowData)} sortable filter filterPlaceholder=\"Search...\"></Column>\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default Session\r\n"]},"metadata":{},"sourceType":"module"}