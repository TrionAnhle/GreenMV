{"ast":null,"code":"var _jsxFileName = \"P:\\\\Thuc-tap\\\\GreenMovie-V3.0\\\\frontend\\\\admin\\\\src\\\\containers\\\\Categories\\\\Category.js\",\n    _s = $RefreshSig$();\n\nimport { Panel } from 'primereact/panel';\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/request';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toDateTimeString } from \"../utils/date\";\nimport { Button } from 'primereact/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [selectedList, setSelectedList] = useState({});\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  const setSelectedRowCustomize = e => {\n    setSelectedList(e.value);\n    console.log(e.value);\n  };\n\n  const reloadData = () => {\n    API.get('/api/admin/category', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      setData(res.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    header: \"Danh s\\xE1ch th\\u1EC3 lo\\u1EA1i phim\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Click\",\n          icon: \"pi pi-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        value: data,\n        paginator: true,\n        rows: 10,\n        selection: selectedList,\n        onSelectionChange: setSelectedRowCustomize,\n        selectionMode: \"single\",\n        dataKey: \"id\",\n        stateStorage: \"local\",\n        stateKey: \"dt-state-demo-local\",\n        resizableColumns: true,\n        emptyMessage: \"Kh\\xF4ng c\\xF3 th\\u1EC3 lo\\u1EA1i n\\xE0o\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"name\",\n          header: \"T\\xEAn th\\u1EC3 lo\\u1EA1i\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"createdDate\",\n          header: \"Ng\\xE0y t\\u1EA1o\",\n          body: rowData => toDateTimeString(rowData.createdDate),\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"createdBy\",\n          header: \"Ng\\u01B0\\u1EDDi t\\u1EA1o\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"updateDate\",\n          header: \"Ng\\xE0y c\\u1EADp nh\\u1EADt\",\n          body: rowData => toDateTimeString(rowData.updateDate),\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"updateBy\",\n          header: \"Ng\\u01B0\\u1EDDi c\\u1EADp nh\\u1EADt\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"nPw13jTlAsJT0oa6Ge9yzaLVNcE=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["P:/Thuc-tap/GreenMovie-V3.0/frontend/admin/src/containers/Categories/Category.js"],"names":["Panel","React","useState","useEffect","API","DataTable","Column","toDateTimeString","Button","Category","data","setData","selectedList","setSelectedList","reloadData","setSelectedRowCustomize","e","value","console","log","get","headers","localStorage","getItem","then","res","catch","error","rowData","createdDate","updateDate"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACnCH,IAAAA,eAAe,CAACG,CAAC,CAACC,KAAH,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,KAAd;AACH,GAHD;;AAKA,QAAMH,UAAU,GAAG,MAAK;AACpBV,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,qBAAR,EACA;AACIC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADpD;AADb,KADA,EAKKC,IALL,CAKWC,GAAD,IAAQ;AACVd,MAAAA,OAAO,CAACc,GAAG,CAACf,IAAJ,CAASA,IAAV,CAAP;AACH,KAPL,EAQKgB,KARL,CAQYC,KAAD,IAAS;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACP,KAVD;AAWH,GAZD;;AAcA,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAC,sCAAd;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACQ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEjB,IAAlB;AAAwB,QAAA,SAAS,MAAjC;AAAkC,QAAA,IAAI,EAAE,EAAxC;AACI,QAAA,SAAS,EAAEE,YADf;AAEI,QAAA,iBAAiB,EAAEG,uBAFvB;AAGI,QAAA,aAAa,EAAC,QAHlB;AAII,QAAA,OAAO,EAAC,IAJZ;AAKI,QAAA,YAAY,EAAC,OALjB;AAMI,QAAA,QAAQ,EAAC,qBANb;AAOI,QAAA,gBAAgB,MAPpB;AAQI,QAAA,YAAY,EAAC,0CARjB;AAAA,gCASI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,MAAM,EAAC,2BAA5B;AAA2C,UAAA,QAAQ,MAAnD;AAAoD,UAAA,MAAM,MAA1D;AAA2D,UAAA,iBAAiB,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,aAAd;AAA4B,UAAA,MAAM,EAAC,kBAAnC;AAA8C,UAAA,IAAI,EAAGa,OAAD,IAAarB,gBAAgB,CAACqB,OAAO,CAACC,WAAT,CAAjF;AAAwG,UAAA,QAAQ,MAAhH;AAAiH,UAAA,MAAM,MAAvH;AAAwH,UAAA,iBAAiB,EAAC;AAA1I;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,0BAAjC;AAA6C,UAAA,QAAQ,MAArD;AAAsD,UAAA,MAAM,MAA5D;AAA6D,UAAA,iBAAiB,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,YAAd;AAA2B,UAAA,MAAM,EAAC,4BAAlC;AAAkD,UAAA,IAAI,EAAGD,OAAD,IAAarB,gBAAgB,CAACqB,OAAO,CAACE,UAAT,CAArF;AAA2G,UAAA,QAAQ,MAAnH;AAAoH,UAAA,MAAM,MAA1H;AAA2H,UAAA,iBAAiB,EAAC;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,MAAM,EAAC,oCAAhC;AAAiD,UAAA,QAAQ,MAAzD;AAA0D,UAAA,MAAM,MAAhE;AAAiE,UAAA,iBAAiB,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAtDD;;GAAMrB,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import { Panel } from 'primereact/panel';\r\nimport React, { useState,useEffect } from 'react';\r\nimport API from '../utils/request'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toDateTimeString } from \"../utils/date\";\r\nimport { Button } from 'primereact/button';\r\nconst Category = () => {\r\n\r\n    const [data, setData] = useState({});\r\n    const [selectedList, setSelectedList] = useState({});\r\n\r\n    useEffect(() => {\r\n        reloadData();\r\n    }, [])\r\n\r\n    const setSelectedRowCustomize = (e) => {\r\n        setSelectedList(e.value);\r\n        console.log(e.value);\r\n    };\r\n    \r\n    const reloadData = () =>{\r\n        API.get('/api/admin/category', \r\n        {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }})\r\n            .then((res) =>{\r\n                setData(res.data.data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Panel header=\"Danh sách thể loại phim\">\r\n            <div className=\"p-grid\">\r\n                <div className=\"\">\r\n                    <Button label=\"Click\" icon=\"pi pi-check\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"card\">\r\n                    <DataTable value={data} paginator rows={10}\r\n                        selection={selectedList} \r\n                        onSelectionChange={setSelectedRowCustomize} \r\n                        selectionMode=\"single\" \r\n                        dataKey=\"id\"\r\n                        stateStorage=\"local\" \r\n                        stateKey=\"dt-state-demo-local\"\r\n                        resizableColumns\r\n                        emptyMessage=\"Không có thể loại nào\">\r\n                        <Column field=\"name\" header=\"Tên thể loại\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"createdDate\" header=\"Ngày tạo\" body={(rowData) => toDateTimeString(rowData.createdDate)} sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"createdBy\" header=\"Người tạo\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"updateDate\" header=\"Ngày cập nhật\" body={(rowData) => toDateTimeString(rowData.updateDate)} sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"updateBy\" header=\"Người cập nhật\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    </DataTable>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}