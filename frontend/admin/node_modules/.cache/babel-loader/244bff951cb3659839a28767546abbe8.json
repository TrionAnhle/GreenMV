{"ast":null,"code":"var _jsxFileName = \"P:\\\\Thuc-tap\\\\GreenMovie-V3.0\\\\frontend\\\\admin\\\\src\\\\containers\\\\Categories\\\\Category.js\",\n    _s = $RefreshSig$();\n\nimport { Panel } from 'primereact/panel';\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from '../utils/request';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toDateTimeString } from \"../utils/date\";\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { confirmDialog } from 'primereact/confirmdialog';\nimport { Dialog } from 'primereact/dialog';\nimport { useFormik } from 'formik';\nimport { InputText } from 'primereact/inputtext';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const toast = useRef(null);\n  const [data, setData] = useState({});\n  const [selectedList, setSelectedList] = useState({});\n  const [displayModal, setDisplayModal] = useState(false);\n  const [isInsert, setIsInsert] = useState(true);\n  useEffect(() => {\n    reloadData();\n  }, []);\n\n  const setSelectedRowCustomize = e => {\n    setSelectedList(e.value);\n  };\n\n  const reloadData = () => {\n    API.get('/api/admin/category', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      setData(res.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteItem = () => {\n    API.post('/api/admin/category/delete', [selectedList.id], {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (res.data.ok) {\n        toast.current.show({\n          severity: 'success',\n          summary: 'Thông báo',\n          detail: res.data.message,\n          life: 3000\n        });\n      } else {\n        toast.current.show({\n          severity: 'warn',\n          summary: 'Thông báo',\n          detail: res.data.message,\n          life: 3000\n        });\n      }\n\n      reloadData();\n    }).catch(error => {\n      console.log(error);\n      toast.current.show({\n        severity: 'error',\n        summary: 'Thông báo',\n        detail: 'Lỗi hệ thống',\n        life: 3000\n      });\n    });\n  };\n\n  const rejectFunc = () => {};\n\n  const confirm = () => {\n    confirmDialog({\n      message: 'Bạn có muốn xoá \\\"' + selectedList.name + '\\\" ? ',\n      header: 'Thông báo',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => deleteItem(),\n      reject: () => rejectFunc()\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      id: '',\n      name: ''\n    },\n    validate: data => {\n      const errors = {};\n\n      if (!data.name) {\n        errors.name = 'Tên thể loại không được để trống.';\n      }\n\n      return errors;\n    },\n    onSubmit: data => {}\n  });\n\n  const footer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: isInsert ? 'Thêm' : 'Cập nhật',\n      icon: \"pi pi-check\",\n      onClick: formik.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Hu\\u1EF7\",\n      icon: \"pi pi-times\",\n      onClick: () => setDisplayModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n\n  const createCategory = () => {\n    setDisplayModal(true);\n    setIsInsert(true);\n  };\n\n  const updateCategory = () => {\n    setDisplayModal(true);\n    setIsInsert(false);\n    formik.values.id = selectedList.id;\n    formik.values.name = selectedList.name;\n  };\n\n  const isFormFieldValid = name => !!(formik.touched[name] && formik.errors[name]);\n\n  const getFormErrorMessage = name => {\n    return isFormFieldValid(name) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: formik.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 42\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    header: \"Danh s\\xE1ch th\\u1EC3 lo\\u1EA1i phim\",\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Th\\xEAm\",\n          icon: \"pi pi-plus\",\n          className: \"p-button-success\",\n          onClick: createCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"S\\u1EEDa\",\n          icon: \"pi pi-pencil\",\n          className: \"p-button-info\",\n          onClick: updateCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field p-mr-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Xo\\xE1\",\n          icon: \"pi pi-times\",\n          className: \"p-button-danger\",\n          onClick: confirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid\",\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        header: isInsert ? 'Thêm mới' : 'Cập nhật',\n        onHide: () => setDisplayModal(false),\n        visible: displayModal,\n        footer: footer,\n        breakpoints: {\n          '960px': '75vw',\n          '640px': '100vw'\n        },\n        style: {\n          width: '50vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: \"p-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field p-mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"name\",\n                placeholder: \"T\\xEAn th\\u1EC3 lo\\u1EA1i\",\n                name: \"name\",\n                value: formik.values.name,\n                onChange: formik.handleChange,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), getFormErrorMessage('name'), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error p-d-block\",\n              children: formik.touched.name ? formik.errors.name : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        value: data,\n        paginator: true,\n        rows: 10,\n        selection: selectedList,\n        onSelectionChange: setSelectedRowCustomize,\n        selectionMode: \"single\",\n        dataKey: \"id\",\n        stateStorage: \"local\",\n        stateKey: \"dt-state-demo-local\",\n        emptyMessage: \"Kh\\xF4ng c\\xF3 th\\u1EC3 lo\\u1EA1i n\\xE0o\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"name\",\n          header: \"T\\xEAn th\\u1EC3 lo\\u1EA1i\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"createdDate\",\n          header: \"Ng\\xE0y t\\u1EA1o\",\n          body: rowData => toDateTimeString(rowData.createdDate),\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"createdBy\",\n          header: \"Ng\\u01B0\\u1EDDi t\\u1EA1o\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"updateDate\",\n          header: \"Ng\\xE0y c\\u1EADp nh\\u1EADt\",\n          body: rowData => toDateTimeString(rowData.updateDate),\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"updateBy\",\n          header: \"Ng\\u01B0\\u1EDDi c\\u1EADp nh\\u1EADt\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"CfKeJmVBhqVJduHDkejAex07JgA=\", false, function () {\n  return [useFormik];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["P:/Thuc-tap/GreenMovie-V3.0/frontend/admin/src/containers/Categories/Category.js"],"names":["Panel","React","useState","useEffect","useRef","API","DataTable","Column","toDateTimeString","Button","Toast","confirmDialog","Dialog","useFormik","InputText","Yup","Category","toast","data","setData","selectedList","setSelectedList","displayModal","setDisplayModal","isInsert","setIsInsert","reloadData","setSelectedRowCustomize","e","value","get","headers","localStorage","getItem","then","res","catch","error","console","log","deleteItem","post","id","ok","current","show","severity","summary","detail","message","life","rejectFunc","confirm","name","header","icon","accept","reject","formik","initialValues","validate","errors","onSubmit","footer","handleSubmit","createCategory","updateCategory","values","isFormFieldValid","touched","getFormErrorMessage","width","handleChange","rowData","createdDate","updateDate"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,KAAK,GAAGb,MAAM,CAAC,IAAD,CAApB;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACnCP,IAAAA,eAAe,CAACO,CAAC,CAACC,KAAH,CAAf;AACH,GAFD;;AAIA,QAAMH,UAAU,GAAG,MAAK;AACpBrB,IAAAA,GAAG,CAACyB,GAAJ,CAAQ,qBAAR,EACA;AACIC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADpD;AADb,KADA,EAKKC,IALL,CAKWC,GAAD,IAAQ;AACVhB,MAAAA,OAAO,CAACgB,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAP;AACH,KAPL,EAQKkB,KARL,CAQYC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP,KAVD;AAWH,GAZD;;AAcA,QAAMG,UAAU,GAAG,MAAM;AACrBnC,IAAAA,GAAG,CAACoC,IAAJ,CAAS,4BAAT,EAAuC,CAACrB,YAAY,CAACsB,EAAd,CAAvC,EACA;AACIX,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADpD;AADb,KADA,EAKKC,IALL,CAKWC,GAAD,IAAQ;AACV,UAAGA,GAAG,CAACjB,IAAJ,CAASyB,EAAZ,EAAe;AACX1B,QAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB;AAACC,UAAAA,QAAQ,EAAC,SAAV;AAAqBC,UAAAA,OAAO,EAAE,WAA9B;AAA2CC,UAAAA,MAAM,EAAEb,GAAG,CAACjB,IAAJ,CAAS+B,OAA5D;AAAqEC,UAAAA,IAAI,EAAE;AAA3E,SAAnB;AACH,OAFD,MAEK;AACDjC,QAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB;AAACC,UAAAA,QAAQ,EAAC,MAAV;AAAkBC,UAAAA,OAAO,EAAE,WAA3B;AAAwCC,UAAAA,MAAM,EAAEb,GAAG,CAACjB,IAAJ,CAAS+B,OAAzD;AAAkEC,UAAAA,IAAI,EAAE;AAAxE,SAAnB;AACH;;AACDxB,MAAAA,UAAU;AACb,KAZL,EAaKU,KAbL,CAaYC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACApB,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB;AAACC,QAAAA,QAAQ,EAAC,OAAV;AAAmBC,QAAAA,OAAO,EAAE,WAA5B;AAAyCC,QAAAA,MAAM,EAAC,cAAhD;AAAgEE,QAAAA,IAAI,EAAE;AAAtE,OAAnB;AACP,KAhBD;AAiBH,GAlBD;;AAmBA,QAAMC,UAAU,GAAG,MAAK,CAEvB,CAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AAClBzC,IAAAA,aAAa,CAAC;AACVsC,MAAAA,OAAO,EAAE,uBAAqB7B,YAAY,CAACiC,IAAlC,GAAuC,OADtC;AAEVC,MAAAA,MAAM,EAAE,WAFE;AAGVC,MAAAA,IAAI,EAAE,4BAHI;AAIVC,MAAAA,MAAM,EAAE,MAAMhB,UAAU,EAJd;AAKViB,MAAAA,MAAM,EAAE,MAAMN,UAAU;AALd,KAAD,CAAb;AAOH,GARD;;AAUA,QAAMO,MAAM,GAAG7C,SAAS,CAAC;AACrB8C,IAAAA,aAAa,EAAE;AACXjB,MAAAA,EAAE,EAAG,EADM;AAEXW,MAAAA,IAAI,EAAE;AAFK,KADM;AAKrBO,IAAAA,QAAQ,EAAG1C,IAAD,IAAU;AAChB,YAAM2C,MAAM,GAAG,EAAf;;AACA,UAAI,CAAC3C,IAAI,CAACmC,IAAV,EAAgB;AACZQ,QAAAA,MAAM,CAACR,IAAP,GAAc,mCAAd;AACH;;AACD,aAAOQ,MAAP;AACH,KAXoB;AAYrBC,IAAAA,QAAQ,EAAG5C,IAAD,IAAU,CAEnB;AAdoB,GAAD,CAAxB;;AAiBA,QAAM6C,MAAM,gBACR;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEvC,QAAQ,GAAG,MAAH,GAAW,UAAlC;AAA8C,MAAA,IAAI,EAAC,aAAnD;AAAiE,MAAA,OAAO,EAAEkC,MAAM,CAACM;AAAjF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAoB,MAAA,IAAI,EAAC,aAAzB;AAAuC,MAAA,OAAO,EAAE,MAAKzC,eAAe,CAAC,KAAD;AAApE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,QAAM0C,cAAc,GAAG,MAAK;AACxB1C,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAHD;;AAKA,QAAMyC,cAAc,GAAG,MAAK;AACxB3C,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAiC,IAAAA,MAAM,CAACS,MAAP,CAAczB,EAAd,GAAmBtB,YAAY,CAACsB,EAAhC;AACAgB,IAAAA,MAAM,CAACS,MAAP,CAAcd,IAAd,GAAqBjC,YAAY,CAACiC,IAAlC;AACH,GALD;;AAOA,QAAMe,gBAAgB,GAAIf,IAAD,IAAU,CAAC,EAAEK,MAAM,CAACW,OAAP,CAAehB,IAAf,KAAwBK,MAAM,CAACG,MAAP,CAAcR,IAAd,CAA1B,CAApC;;AACA,QAAMiB,mBAAmB,GAAIjB,IAAD,IAAU;AAClC,WAAOe,gBAAgB,CAACf,IAAD,CAAhB,iBAA0B;AAAO,MAAA,SAAS,EAAC,SAAjB;AAAA,gBAA4BK,MAAM,CAACG,MAAP,CAAcR,IAAd;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAjC;AACH,GAFD;;AAMA,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAC,sCAAd;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEpC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAqB,UAAA,IAAI,EAAC,YAA1B;AAAuC,UAAA,SAAS,EAAC,kBAAjD;AAAoE,UAAA,OAAO,EAAEgD;AAA7E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAoB,UAAA,IAAI,EAAC,cAAzB;AAAwC,UAAA,SAAS,EAAC,eAAlD;AAAkE,UAAA,OAAO,EAAEC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAoB,UAAA,IAAI,EAAC,aAAzB;AAAuC,UAAA,SAAS,EAAC,iBAAjD;AAAmE,UAAA,OAAO,EAAEd;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE5B,QAAQ,GAAG,UAAH,GAAgB,UAAxC;AAAoD,QAAA,MAAM,EAAE,MAAMD,eAAe,CAAC,KAAD,CAAjF;AAA0F,QAAA,OAAO,EAAED,YAAnG;AAAiH,QAAA,MAAM,EAAEyC,MAAzH;AAAkI,QAAA,WAAW,EAAE;AAAC,mBAAS,MAAV;AAAkB,mBAAS;AAA3B,SAA/I;AAAoL,QAAA,KAAK,EAAE;AAACQ,UAAAA,KAAK,EAAE;AAAR,SAA3L;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEb,MAAM,CAACM,YAAvB;AAAqC,UAAA,SAAS,EAAC,SAA/C;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,eAAhB;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,EAAE,EAAC,MAAd;AAAqB,gBAAA,WAAW,EAAC,2BAAjC;AAAgD,gBAAA,IAAI,EAAC,MAArD;AAA4D,gBAAA,KAAK,EAAEN,MAAM,CAACS,MAAP,CAAcd,IAAjF;AAAuF,gBAAA,QAAQ,EAAEK,MAAM,CAACc,YAAxG;AAAsH,gBAAA,SAAS;AAA/H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,EAIKF,mBAAmB,CAAC,MAAD,CAJxB,eAKI;AAAO,cAAA,SAAS,EAAC,mBAAjB;AAAA,wBAAsCZ,MAAM,CAACW,OAAP,CAAehB,IAAf,GAAsBK,MAAM,CAACG,MAAP,CAAcR,IAApC,GAA2C;AAAjF;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ,eA0BI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACQ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEnC,IAAlB;AAAwB,QAAA,SAAS,MAAjC;AAAkC,QAAA,IAAI,EAAE,EAAxC;AACI,QAAA,SAAS,EAAEE,YADf;AAEI,QAAA,iBAAiB,EAAEO,uBAFvB;AAGI,QAAA,aAAa,EAAC,QAHlB;AAII,QAAA,OAAO,EAAC,IAJZ;AAKI,QAAA,YAAY,EAAC,OALjB;AAMI,QAAA,QAAQ,EAAC,qBANb;AAOI,QAAA,YAAY,EAAC,0CAPjB;AAAA,gCAQI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,MAAM,EAAC,2BAA5B;AAA2C,UAAA,QAAQ,MAAnD;AAAoD,UAAA,MAAM,MAA1D;AAA2D,UAAA,iBAAiB,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,aAAd;AAA4B,UAAA,MAAM,EAAC,kBAAnC;AAA8C,UAAA,IAAI,EAAG8C,OAAD,IAAajE,gBAAgB,CAACiE,OAAO,CAACC,WAAT,CAAjF;AAAwG,UAAA,QAAQ,MAAhH;AAAiH,UAAA,MAAM,MAAvH;AAAwH,UAAA,iBAAiB,EAAC;AAA1I;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,0BAAjC;AAA6C,UAAA,QAAQ,MAArD;AAAsD,UAAA,MAAM,MAA5D;AAA6D,UAAA,iBAAiB,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,YAAd;AAA2B,UAAA,MAAM,EAAC,4BAAlC;AAAkD,UAAA,IAAI,EAAGD,OAAD,IAAajE,gBAAgB,CAACiE,OAAO,CAACE,UAAT,CAArF;AAA2G,UAAA,QAAQ,MAAnH;AAAoH,UAAA,MAAM,MAA1H;AAA2H,UAAA,iBAAiB,EAAC;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,MAAM,EAAC,oCAAhC;AAAiD,UAAA,QAAQ,MAAzD;AAA0D,UAAA,MAAM,MAAhE;AAAiE,UAAA,iBAAiB,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CAtJD;;GAAM3D,Q;UA8DaH,S;;;KA9DbG,Q;AAuJN,eAAeA,QAAf","sourcesContent":["import { Panel } from 'primereact/panel';\r\nimport React, { useState,useEffect,useRef } from 'react';\r\nimport API from '../utils/request'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toDateTimeString } from \"../utils/date\";\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { useFormik } from 'formik';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport * as Yup from 'yup';\r\n\r\nconst Category = () => {\r\n    const toast = useRef(null);\r\n    const [data, setData] = useState({});\r\n    const [selectedList, setSelectedList] = useState({});\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [isInsert, setIsInsert] = useState(true);    \r\n\r\n    useEffect(() => {\r\n        reloadData();\r\n    }, [])\r\n\r\n    const setSelectedRowCustomize = (e) => {\r\n        setSelectedList(e.value);\r\n    };\r\n    \r\n    const reloadData = () =>{\r\n        API.get('/api/admin/category', \r\n        {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }})\r\n            .then((res) =>{\r\n                setData(res.data.data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n        });\r\n    }\r\n    \r\n    const deleteItem = () => {\r\n        API.post('/api/admin/category/delete', [selectedList.id], \r\n        {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }})\r\n            .then((res) =>{\r\n                if(res.data.ok){\r\n                    toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n                }else{\r\n                    toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n                }\r\n                reloadData();\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\r\n        });\r\n    }\r\n    const rejectFunc = () =>{\r\n\r\n    }\r\n\r\n    const confirm = () => {\r\n        confirmDialog({\r\n            message: 'Bạn có muốn xoá \\\"'+selectedList.name+'\\\" ? ',\r\n            header: 'Thông báo',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => deleteItem(),\r\n            reject: () => rejectFunc()\r\n        });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id : '',\r\n            name: ''\r\n        },\r\n        validate: (data) => {\r\n            const errors = {};\r\n            if (!data.name) {\r\n                errors.name = 'Tên thể loại không được để trống.';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            \r\n        }\r\n    });\r\n\r\n    const footer = (\r\n        <div>\r\n            <Button label={isInsert ? 'Thêm': 'Cập nhật'} icon=\"pi pi-check\" onClick={formik.handleSubmit}/>\r\n            <Button label=\"Huỷ\" icon=\"pi pi-times\" onClick={() =>setDisplayModal(false)}/>\r\n        </div>\r\n    );\r\n\r\n    const createCategory = () =>{\r\n        setDisplayModal(true);\r\n        setIsInsert(true);\r\n    };\r\n\r\n    const updateCategory = () =>{\r\n        setDisplayModal(true);\r\n        setIsInsert(false);\r\n        formik.values.id = selectedList.id;\r\n        formik.values.name = selectedList.name;\r\n    };\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"p-error\">{formik.errors[name]}</small>;\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <Panel header=\"Danh sách thể loại phim\">\r\n            <Toast ref={toast} />\r\n            <div className=\"p-grid\">\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Thêm\" icon=\"pi pi-plus\" className=\"p-button-success\" onClick={createCategory}/>\r\n                </div>\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Sửa\" icon=\"pi pi-pencil\" className=\"p-button-info\" onClick={updateCategory}/>\r\n                </div>\r\n                <div className=\"p-field p-mr-2\">\r\n                    <Button label=\"Xoá\" icon=\"pi pi-times\" className=\"p-button-danger\" onClick={confirm}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid\">\r\n                <Dialog header={isInsert ? 'Thêm mới' : 'Cập nhật'} onHide={() => setDisplayModal(false)} visible={displayModal} footer={footer}  breakpoints={{'960px': '75vw', '640px': '100vw'}} style={{width: '50vw'}}>\r\n                    <form onSubmit={formik.handleSubmit} className=\"p-fluid\">\r\n                        <div className=\"p-field p-mt-4\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"name\" placeholder='Tên thể loại' name=\"name\" value={formik.values.name} onChange={formik.handleChange} autoFocus />\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                            <small className=\"p-error p-d-block\">{formik.touched.name ? formik.errors.name : ''}</small>\r\n                        </div>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n            <div className=\"card\">\r\n                    <DataTable value={data} paginator rows={10}\r\n                        selection={selectedList} \r\n                        onSelectionChange={setSelectedRowCustomize} \r\n                        selectionMode=\"single\" \r\n                        dataKey=\"id\"\r\n                        stateStorage=\"local\" \r\n                        stateKey=\"dt-state-demo-local\"\r\n                        emptyMessage=\"Không có thể loại nào\">\r\n                        <Column field=\"name\" header=\"Tên thể loại\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"createdDate\" header=\"Ngày tạo\" body={(rowData) => toDateTimeString(rowData.createdDate)} sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"createdBy\" header=\"Người tạo\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"updateDate\" header=\"Ngày cập nhật\" body={(rowData) => toDateTimeString(rowData.updateDate)} sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column field=\"updateBy\" header=\"Người cập nhật\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    </DataTable>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}