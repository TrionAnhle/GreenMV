{"ast":null,"code":"var _jsxFileName = \"P:\\\\Thuc-tap\\\\GreenMovie-V3.0\\\\frontend\\\\admin\\\\src\\\\containers\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { useFormik } from 'formik';\nimport { Toast } from 'primereact/toast';\nimport API from '../utils/request';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const toast = useRef(null);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      id: '',\n      username: '',\n      password: '',\n      fullName: '',\n      name: '',\n      sex: '',\n      phone: '',\n      address: ''\n    },\n    validate: data => {\n      const errors = {};\n\n      if (!data.username.trim()) {\n        errors.username = 'Username không được để trống';\n      }\n\n      if (isInsert) {\n        if (!data.password.trim()) {\n          errors.password = 'Password không được để trống';\n        }\n      }\n\n      if (!data.fullName.trim()) {\n        errors.fullName = 'Họ tên không được để trống';\n      }\n\n      if (!data.phone.trim()) {\n        errors.phone = 'Số điện thoại không được để trống';\n      }\n\n      return errors;\n    },\n    onSubmit: data => {\n      console.log(data);\n      let API_URL = isInsert ? '/api/auth/signup/staff' : '/api/admin/staff';\n      data.sex = sex;\n      API.post(API_URL, data, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        if (res.data.ok) {\n          toast.current.show({\n            severity: 'success',\n            summary: 'Thông báo',\n            detail: res.data.message,\n            life: 3000\n          });\n          reloadData();\n          setDisplayModal(false);\n        } else {\n          toast.current.show({\n            severity: 'warn',\n            summary: 'Thông báo',\n            detail: res.data.message,\n            life: 3000\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        toast.current.show({\n          severity: 'error',\n          summary: 'Thông báo',\n          detail: 'Lỗi hệ thống',\n          life: 3000\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-d-flex p-jc-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"p-text-center\",\n            children: \"\\u0110\\u0103ng nh\\u1EADp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            className: \"p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(InputText, {\n                  id: \"username\",\n                  name: \"username\",\n                  value: formik.values.username,\n                  onChange: formik.handleChange,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  className: classNames({\n                    'p-error': isFormFieldValid('username')\n                  }),\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), getFormErrorMessage('username')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(InputText, {\n                  type: \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: formik.values.password,\n                  onChange: formik.handleChange,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: classNames({\n                    'p-error': isFormFieldValid('password')\n                  }),\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), getFormErrorMessage('password')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              label: \"\\u0110\\u0103ng nh\\u1EADp\",\n              className: \"p-mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-grid p-mt-3\",\n              style: {\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/register\",\n                children: \"Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n, \\u0110\\u0103ng k\\xFD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"9loFY1VvjuLA1kW0vIt3aTBOLfM=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["P:/Thuc-tap/GreenMovie-V3.0/frontend/admin/src/containers/Register/Register.js"],"names":["React","useState","useRef","InputText","Button","useFormik","Toast","API","useHistory","Register","toast","history","formik","initialValues","id","username","password","fullName","name","sex","phone","address","validate","data","errors","trim","isInsert","onSubmit","console","log","API_URL","post","headers","localStorage","getItem","then","res","ok","current","show","severity","summary","detail","message","life","reloadData","setDisplayModal","catch","error","handleSubmit","values","handleChange","classNames","isFormFieldValid","getFormErrorMessage","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState,useRef } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { useFormik } from 'formik';\r\nimport { Toast } from 'primereact/toast';\r\nimport API from '../utils/request'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n    const toast = useRef(null);\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            id: '',\r\n            username : '',\r\n            password : '',\r\n            fullName : '',\r\n            name : '',\r\n            sex : '',\r\n            phone : '',\r\n            address : ''\r\n        },\r\n        validate: (data) => {\r\n            const errors = {};\r\n            if(!data.username.trim()){\r\n                errors.username = 'Username không được để trống';\r\n            }\r\n            if(isInsert){\r\n                if(!data.password.trim()){\r\n                    errors.password = 'Password không được để trống';\r\n                }\r\n            }\r\n            if(!data.fullName.trim()){\r\n                errors.fullName = 'Họ tên không được để trống';\r\n            }\r\n            if(!data.phone.trim()){\r\n                errors.phone = 'Số điện thoại không được để trống';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            let API_URL = (isInsert ? '/api/auth/signup/staff' : '/api/admin/staff');\r\n            data.sex = sex;\r\n            API.post(API_URL, data, \r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }})\r\n                .then((res) =>{\r\n                    if(res.data.ok){\r\n                        toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n                        reloadData();\r\n                        setDisplayModal(false);\r\n                    }else{\r\n                        toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n                    }\r\n                    \r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n                    toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n        <Toast ref={toast} />\r\n        <div className=\"form\">\r\n            <div className=\"p-d-flex p-jc-center\">\r\n                <div className=\"card\">\r\n                    <h2 className=\"p-text-center\">Đăng nhập</h2>\r\n                    <form onSubmit={formik.handleSubmit} className=\"p-fluid\">\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"username\" name=\"username\" value={formik.values.username} onChange={formik.handleChange} autoFocus />\r\n                                <label htmlFor=\"username\" className={classNames({ 'p-error': isFormFieldValid('username') })}>Username</label>\r\n                            </span>\r\n                            {getFormErrorMessage('username')}\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText type=\"password\" id=\"password\" name=\"password\" value={formik.values.password} onChange={formik.handleChange} autoFocus />\r\n                                <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid('password') })}>Password</label>\r\n                            </span>\r\n                            {getFormErrorMessage('password')}\r\n                        </div>\r\n                        <Button type=\"submit\" label=\"Đăng nhập\" className=\"p-mt-2\" />\r\n                        <div className=\"p-grid p-mt-3\" style={{justifyContent:'center'}}>\r\n                            <a href=\"/register\" >Chưa có tài khoản, Đăng ký</a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}