{"ast":null,"code":"var _jsxFileName = \"P:\\\\Thuc-tap\\\\GreenMovie-V3.0\\\\frontend\\\\admin\\\\src\\\\containers\\\\Account\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport { Panel } from 'primereact/panel';\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from '../utils/request';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { useFormik } from 'formik';\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  const [sex, setSex] = useState(true);\n  const history = useHistory();\n  const toast = useRef(null);\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      fullName: '',\n      name: '',\n      sex: '',\n      phone: '',\n      email: '',\n      address: ''\n    },\n    validate: data => {\n      const errors = {};\n\n      if (!data.username.trim()) {\n        errors.username = 'Username không được để trống';\n      }\n\n      if (!data.password.trim()) {\n        errors.password = 'Password không được để trống';\n      }\n\n      if (!data.fullName.trim()) {\n        errors.fullName = 'Họ tên không được để trống';\n      }\n\n      if (!data.phone.trim()) {\n        errors.phone = 'Số điện thoại không được để trống';\n      }\n\n      return errors;\n    },\n    onSubmit: data => {\n      console.log(data);\n      data.sex = sex;\n      API.post('/api/auth/signup', data).then(res => {\n        if (res.data.ok) {\n          toast.current.show({\n            severity: 'success',\n            summary: 'Thông báo',\n            detail: res.data.message + \", 3s sau sẽ được chuyển về trang đăng nhập\",\n            life: 3000\n          });\n          setTimeout(() => {\n            history.push(\"/login\");\n          }, 3000);\n        } else {\n          toast.current.show({\n            severity: 'warn',\n            summary: 'Thông báo',\n            detail: res.data.message,\n            life: 3000\n          });\n        }\n      }).catch(error => {\n        if (error.response.status === 400) {\n          toast.current.show({\n            severity: 'error',\n            summary: 'Thông báo',\n            detail: error.response.data.message,\n            life: 3000\n          });\n        } else toast.current.show({\n          severity: 'error',\n          summary: 'Thông báo',\n          detail: 'Lỗi hệ thống',\n          life: 3000\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      justifyContent: 'center'\n    },\n    className: \"p-col-12\",\n    children: /*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Account, \"pSvIDk2+b4ZZ3F/kNMCUVGVQVCE=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["P:/Thuc-tap/GreenMovie-V3.0/frontend/admin/src/containers/Account/Account.js"],"names":["Panel","React","useState","useEffect","useRef","API","Button","Toast","useFormik","InputText","Password","Checkbox","InputTextarea","useHistory","Account","sex","setSex","history","toast","formik","initialValues","username","password","fullName","name","phone","email","address","validate","data","errors","trim","onSubmit","console","log","post","then","res","ok","current","show","severity","summary","detail","message","life","setTimeout","push","catch","error","response","status","justifyContent"],"mappings":"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","sourcesContent":["import { Panel } from 'primereact/panel';\r\nimport React, { useState,useEffect,useRef } from 'react';\r\nimport API from '../utils/request'\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { useFormik } from 'formik';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport {Password} from 'primereact/password';\r\n\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Account() {\r\n    const [sex, setSex] = useState(true);\r\n    const history = useHistory();\r\n    const toast = useRef(null);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username : '',\r\n            password : '',\r\n            fullName : '',\r\n            name : '',\r\n            sex : '',\r\n            phone : '',\r\n            email :'',\r\n            address : ''\r\n        },\r\n        validate: (data) => {\r\n            const errors = {};\r\n            if(!data.username.trim()){\r\n                errors.username = 'Username không được để trống';\r\n            }\r\n            if(!data.password.trim()){\r\n                errors.password = 'Password không được để trống';\r\n            }\r\n            if(!data.fullName.trim()){\r\n                errors.fullName = 'Họ tên không được để trống';\r\n            }\r\n            if(!data.phone.trim()){\r\n                errors.phone = 'Số điện thoại không được để trống';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            console.log(data);\r\n            data.sex = sex;\r\n            API.post('/api/auth/signup', data)\r\n            .then((res) =>{\r\n                if(res.data.ok){\r\n                    toast.current.show({severity:'success', summary: 'Thông báo', detail: res.data.message+\", 3s sau sẽ được chuyển về trang đăng nhập\", life: 3000});\r\n                    setTimeout(() => { history.push(\"/login\"); }, 3000);\r\n                }else{\r\n                    toast.current.show({severity:'warn', summary: 'Thông báo', detail: res.data.message, life: 3000});\r\n                }\r\n                \r\n            })\r\n            .catch((error)=>{\r\n                if(error.response.status === 400){\r\n                    toast.current.show({severity:'error', summary: 'Thông báo', detail: error.response.data.message, life: 3000});\r\n                }else toast.current.show({severity:'error', summary: 'Thông báo', detail:'Lỗi hệ thống', life: 3000});\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={{justifyContent:'center'}} className=\"p-col-12\">\r\n        <Toast ref={toast} />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n"]},"metadata":{},"sourceType":"module"}